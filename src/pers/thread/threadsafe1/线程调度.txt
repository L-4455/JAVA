1.线程的调度
        调度分为两种
        1.抢占式调度
            java采用的就是这种方式,哪个线程的优先级高抢到时间片哪个线程就执行.线程之间的优先级是5
        2.均匀式调度
            每个线程抢到的概率是一样的.平均分配CPU时间片,每个线程的长度和时间片长度一样
            平均分配,一切平等.
        3.每个线程都有优先级
            分别是:
            默认优先级:5
            最低优先级:1
            做高优先级:10
        4.线程优先级指的是该线程抢夺CPU时间片的概率相对较高.
        5.关于线程调度的方法:
            返回该线程的优先级
            int getPriority()
            更改线程的优先级
            void setPriority(int newPriority)
            暂停当前线程,让位给其他线程
            static void yield()
            线程合并
            void join()
2.关于多线程并发下数据的安全(重点)
    2.1.多线程并发在什么时候会有数据安全问题?
        三个条件:
            1.多线程并发
            2.有数据共享
            3.数据共享有修改行为
        满足以上三个条件,就有了多线程数据安全问题.

3.怎么解决多线程数据安全问题?
    对于一个共享的数据C,线程A和线程B同时数据C进行了修改,那么这就出了线程安全问题
    应当线程B等待线程A操作结束,线程B才可以继续操作C.
    这个就叫线程排队,专业术语叫做:线程同步机制.
    这种机制会牺牲线程的一部分效率.用来保证数据的安全.

4.同步编程模型和异步编程模型
    线程同步:
        线程A和线程B,必须排队操作,只有线程A结束,线程B才可以进行操作.或者是说线程B结束,线程A才可以执行.

        同步就是排队
    线程异步:
        线程A和线程B,谁也不管谁,谁也管不了谁,各自执行各自的代码.

        异步就是并发